/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import Entity.KhachHang;
import utils.MsgBox;
import dao.KhachHangDao;
import java.awt.Color;
import utils.XDate;
import utils.XImage;

/**
 *
 * @author haoca
 */
public class DangKyTaiKhoanMoiJDialog extends javax.swing.JDialog {
    KhachHangDao khDAO = new KhachHangDao();
    boolean check = false;
    /**
     * Creates new form DangKyTaiKhoanMoiJDialog
     */
    public DangKyTaiKhoanMoiJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }
    
    void init(){
        setIconImage(XImage.getAppIcon());
        setLocationRelativeTo(null);
        setTitle("Hệ thống Đăng ký");
    }
    
    KhachHang getForm() {
        KhachHang kh = new KhachHang();
        kh.setMaKH(txtTaiKhoan.getText().trim());
        kh.setMaNV("NV01");
        kh.setMatKhau(String.valueOf(txtMK.getPassword()).trim());
        kh.setNgayDK(XDate.now());
        kh.setHoTen(txtHoTen.getText().trim());
        return kh;
    }

    void clearForm() {
        txtHoTen.setText("");
        txtMK.setText("");
        txtTaiKhoan.setText("");
        txtXNMK.setText("");
    }

    void dangKy() {
        KhachHang model = getForm();
        String XNMK = new String(txtXNMK.getPassword());
        if (!XNMK.trim().equals(model.getMatKhau())) {
            MsgBox.alert(this, "Xác nhận mật khẩu sai");
        } else {
            try {
                khDAO.insert(model);
                this.clearForm();
                MsgBox.alert(this, "Đăng ký thành công");
            } catch (Exception e) {
                txtTaiKhoan.requestFocus();
                MsgBox.alert(this, "Trùng tên tài khoản, vui lòng chọn tài khoản khác !");
                return ;
            }
        }
    }

    void kiemTraForm() {
        //String tenTK_regex = "/^[a-z0-9]{3,20}$/";
        String hoTen_regex = "^[A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠ-ỹ ]{3,50}$";
        if (txtTaiKhoan.getText().length()==0) {
            txtTaiKhoan.requestFocus();
            MsgBox.alert(this, "Tài khoản đang để trống");
            check = false;
            return;
//        }else if(txtTaiKhoan.getText().matches(tenTK_regex) == false){
//            txtTaiKhoan.requestFocus();
//            MsgBox.alert(this, "Tên tài khoản không đúng định dạng (mẫu : tk123) - từ 3 - 20 ký tự");
//            check = false;
//            return;
        }else if (txtTaiKhoan.getText().contains(" ")) {
            txtTaiKhoan.requestFocus();
            MsgBox.alert(this, "Tên tài khoản không chứa khoảng trống");
            check = false;
            return;
        }  else{
            check = true;
        } 
        
        if (txtHoTen.getText().length()==0) {
            txtHoTen.requestFocus();
            MsgBox.alert(this, "Không để trống họ tên");
            check = false;
            return;
        }else if (txtHoTen.getText().equals(" ")) {
            txtHoTen.requestFocus();
            MsgBox.alert(this, "Không để tên là khoảng trống");
            check = false;
            return;
        }else if (txtHoTen.getText().matches(hoTen_regex) == false) {
            System.out.println(txtHoTen.getText().matches(hoTen_regex));
            txtHoTen.requestFocus();
            MsgBox.alert(this, "Sai định dạng họ tên");
            check = false;
            return;
        }else{
            check = true;
        }

        if (txtMK.getText().length() == 0) {
            txtMK.requestFocus();
            MsgBox.alert(this, "Mật khẩu không để trống");
            check = false;
            return;
        }else if (txtMK.getText().contains(" ")) {
            txtMK.requestFocus();
            MsgBox.alert(this, "Mật khẩu không chứa khoảng trống");
            check = false;
            return;
        } else if (txtMK.getText().length() > 30) {
            txtXNMK.requestFocus();
            MsgBox.alert(this, "Mật khẩu quá dài( ít hơn 30 ký tự )");
            check = false;
            return;
        }else{
            check = true;
        }
        
        if (txtXNMK.getText().length() == 0) {
            txtXNMK.requestFocus();
            MsgBox.alert(this, "chưa nhập mật khẩu xác nhận");
            check = false;
            return;
        }else {
            check = true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtMK = new javax.swing.JPasswordField();
        txtXNMK = new javax.swing.JPasswordField();
        btnDangKy = new javax.swing.JButton();
        btnDong = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 0));
        jLabel1.setText("Đăng ký tài khoản mới");

        jLabel2.setText("Tên tài khoản:");

        jLabel3.setText("Họ và tên:");

        jLabel4.setText("Mật khẩu:");

        jLabel5.setText("Xác nhận mật khẩu:");

        btnDangKy.setText("Đăng ký");
        btnDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKyActionPerformed(evt);
            }
        });

        btnDong.setText("Đóng");
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDangKy)
                        .addGap(41, 41, 41)
                        .addComponent(btnDong))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtTaiKhoan)
                        .addComponent(txtHoTen)
                        .addComponent(txtMK)
                        .addComponent(txtXNMK, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtXNMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDangKy)
                    .addComponent(btnDong))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnDongActionPerformed

    private void btnDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKyActionPerformed
        // TODO add your handling code here:
        kiemTraForm();
        if(check == true){
            dangKy();
        } 
    }//GEN-LAST:event_btnDangKyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangKyTaiKhoanMoiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangKyTaiKhoanMoiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangKyTaiKhoanMoiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangKyTaiKhoanMoiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DangKyTaiKhoanMoiJDialog dialog = new DangKyTaiKhoanMoiJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKy;
    private javax.swing.JButton btnDong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JPasswordField txtMK;
    private javax.swing.JTextField txtTaiKhoan;
    private javax.swing.JPasswordField txtXNMK;
    // End of variables declaration//GEN-END:variables
}
